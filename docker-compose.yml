version: "3.7"
services:
  redis-service:
    image: redis
    restart: always
    ports:
      - 6380:6379
    # networks:
    #   - my-network
  avengers-backend:
    build:
      dockerfile: Dockerfile.dev
      context: ./avengers-backend
    container_name: avengers-backend
    ports:
      - 3030:3030
    environment:
      - MONGO_HOST=server-mongodb
      - MONGO_PORT=27017
      - MONGO_DB=Docker-test
      - REDIS_HOST=redis-service
    depends_on:
      - server-mongodb

    volumes:
      - "/avengers-backend/node_modules"
      - "./avengers-backend:/avengers-backend"
    # networks:
    #   - my-network
  server-mongodb:
    image: mongo:4.0
    container_name: mongodb
    ports:
      - 27016:27017
    restart: always
    volumes:
      - mongo-data:/data/db
    # networks:
    #   - my-network
  avengers-frontend:
    container_name: avengers-frontend
    build:
      context: ./avengers-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - "./avengers-frontend:/avengers-frontend"
      - "/avengers-frontend/node_modules"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
  # networks:
  #   my-network:
  #     driver: bridge
  nginx:
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - avengers-backend
      - avengers-frontend
volumes:
  mongo-data:
